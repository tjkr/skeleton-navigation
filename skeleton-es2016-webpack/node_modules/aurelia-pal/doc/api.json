{
  "id": 2,
  "name": "\"aurelia-pal\"",
  "kind": 2,
  "kindString": "Module",
  "flags": {},
  "children": [
    {
      "id": 41,
      "name": "Dom",
      "kind": 256,
      "kindString": "Interface",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "Represents the core APIs of the DOM."
      },
      "children": [
        {
          "id": 42,
          "name": "Element",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The global DOM Element type."
          },
          "type": {
            "type": "reference",
            "name": "Element"
          }
        },
        {
          "id": 43,
          "name": "SVGElement",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The global DOM SVGElement type."
          },
          "type": {
            "type": "reference",
            "name": "SVGElement"
          }
        },
        {
          "id": 46,
          "name": "activeElement",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The document's active/focused element."
          },
          "type": {
            "type": "reference",
            "name": "Element"
          }
        },
        {
          "id": 44,
          "name": "boundary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "A key representing a DOM boundary."
          },
          "type": {
            "type": "instrinct",
            "name": "string"
          }
        },
        {
          "id": 45,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The document title."
          },
          "type": {
            "type": "instrinct",
            "name": "string"
          }
        },
        {
          "id": 47,
          "name": "addEventListener",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 48,
              "name": "addEventListener",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Add an event listener to the document."
              },
              "parameters": [
                {
                  "id": 49,
                  "name": "eventName",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string representing the event type to listen for."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                },
                {
                  "id": 50,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The function that receives a notification when an event of the specified type occurs."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Function"
                  }
                },
                {
                  "id": 51,
                  "name": "capture",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "If true, useCapture indicates that the user wishes to initiate capture.\n"
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 57,
          "name": "adoptNode",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 58,
              "name": "adoptNode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Adopts a node from an external document.",
                "returns": "The adopted node able to be used in the document.\n"
              },
              "parameters": [
                {
                  "id": 59,
                  "name": "node",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The node to be adopted."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ]
        },
        {
          "id": 96,
          "name": "appendNode",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 97,
              "name": "appendNode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Appends a node to the parent, if provided, or the document.body otherwise."
              },
              "parameters": [
                {
                  "id": 98,
                  "name": "newNode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The node to append."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                },
                {
                  "id": 99,
                  "name": "parentNode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "The node to append to, otherwise the document.body.\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 66,
          "name": "createComment",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 67,
              "name": "createComment",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new Comment node.",
                "returns": "A Comment node.\n"
              },
              "parameters": [
                {
                  "id": 68,
                  "name": "text",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string to populate the new Comment node."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Comment"
              }
            }
          ]
        },
        {
          "id": 74,
          "name": "createCustomEvent",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 75,
              "name": "createCustomEvent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new CustomEvent.",
                "returns": "A CustomEvent.\n"
              },
              "parameters": [
                {
                  "id": 76,
                  "name": "eventType",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string representing the event type."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                },
                {
                  "id": 77,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "An options object specifying bubbles:boolean, cancelable:boolean and/or detail:Object information."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Object"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "CustomEvent"
              }
            }
          ]
        },
        {
          "id": 69,
          "name": "createDocumentFragment",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 70,
              "name": "createDocumentFragment",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new DocumentFragment.",
                "returns": "A DocumentFragment.\n"
              },
              "type": {
                "type": "reference",
                "name": "DocumentFragment"
              }
            }
          ]
        },
        {
          "id": 60,
          "name": "createElement",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 61,
              "name": "createElement",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates the specified HTML element or an HTMLUnknownElement if the given element name isn't a known one.",
                "returns": "The created element.\n"
              },
              "parameters": [
                {
                  "id": 62,
                  "name": "tagName",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string that specifies the type of element to be created."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Element"
              }
            }
          ]
        },
        {
          "id": 71,
          "name": "createMutationObserver",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 72,
              "name": "createMutationObserver",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new MutationObserver.",
                "returns": "A MutationObservere.\n"
              },
              "parameters": [
                {
                  "id": 73,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A callback that will recieve the change records with the mutations."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Function"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "MutationObserver"
              }
            }
          ]
        },
        {
          "id": 93,
          "name": "createTemplateFromMarkup",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 94,
              "name": "createTemplateFromMarkup",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates an HTMLTemplateElement using the markup provided.",
                "returns": "The instance of HTMLTemplateElement that was created from the provided markup.\n"
              },
              "parameters": [
                {
                  "id": 95,
                  "name": "markup",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string containing the markup to turn into a template. Note: This string must contain the template element as well."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Element"
              }
            }
          ]
        },
        {
          "id": 63,
          "name": "createTextNode",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 64,
              "name": "createTextNode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new Text node.",
                "returns": "A Text node.\n"
              },
              "parameters": [
                {
                  "id": 65,
                  "name": "text",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string to populate the new Text node."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Text"
              }
            }
          ]
        },
        {
          "id": 78,
          "name": "dispatchEvent",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 79,
              "name": "dispatchEvent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Dispatches an event on the document."
              },
              "parameters": [
                {
                  "id": 80,
                  "name": "evt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The event to dispatch.\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Event"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 81,
          "name": "getComputedStyle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 82,
              "name": "getComputedStyle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain.",
                "returns": "The computed styles.\n"
              },
              "parameters": [
                {
                  "id": 83,
                  "name": "element",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The Element for which to get the computed style."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Element"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "CSSStyleDeclaration"
              }
            }
          ]
        },
        {
          "id": 84,
          "name": "getElementById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 85,
              "name": "getElementById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Locates an element in the document according to its id.",
                "returns": "The found element.\n"
              },
              "parameters": [
                {
                  "id": 86,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The id to search the document for."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Element"
              }
            }
          ]
        },
        {
          "id": 109,
          "name": "injectStyles",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 110,
              "name": "injectStyles",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Injects styles into the destination element, or the document.head if no destination is provided.",
                "returns": "The Style node that was created.\n"
              },
              "parameters": [
                {
                  "id": 111,
                  "name": "styles",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The css text to injext."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                },
                {
                  "id": 112,
                  "name": "destination",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "The destination element to inject the css text into. If not specified it will default to the document.head."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Element"
                  }
                },
                {
                  "id": 113,
                  "name": "prepend",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "Indicates whether or not the styles should be prepended to the destination. By default they are appended."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ]
        },
        {
          "id": 90,
          "name": "nextElementSibling",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 91,
              "name": "nextElementSibling",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets the element that is the next sibling of the provided element.",
                "returns": "The next sibling Element of the provided Element.\n"
              },
              "parameters": [
                {
                  "id": 92,
                  "name": "element",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The element whose next sibling is being located."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Element"
              }
            }
          ]
        },
        {
          "id": 87,
          "name": "querySelectorAll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 88,
              "name": "querySelectorAll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs a query selector on the document and returns all located matches.",
                "returns": "A list of all matched elements in the document.\n"
              },
              "parameters": [
                {
                  "id": 89,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The query to use in searching the document."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "NodeList"
              }
            }
          ]
        },
        {
          "id": 52,
          "name": "removeEventListener",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 53,
              "name": "removeEventListener",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Remove an event listener from the document."
              },
              "parameters": [
                {
                  "id": 54,
                  "name": "eventName",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string representing the event type to listen for."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                },
                {
                  "id": 55,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The function to remove from the event."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Function"
                  }
                },
                {
                  "id": 56,
                  "name": "capture",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "Specifies whether the listener to be removed was registered as a capturing listener or not.\n"
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 105,
          "name": "removeNode",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 106,
              "name": "removeNode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Removes the specified node from the parent node."
              },
              "parameters": [
                {
                  "id": 107,
                  "name": "node",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The node to remove."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                },
                {
                  "id": 108,
                  "name": "parentNode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "The parent node from which the node will be removed.\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 100,
          "name": "replaceNode",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 101,
              "name": "replaceNode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Replaces a node in the parent with a new node."
              },
              "parameters": [
                {
                  "id": 102,
                  "name": "newNode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The node to replace the old node with."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                },
                {
                  "id": 103,
                  "name": "node",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The node that is being replaced."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                },
                {
                  "id": 104,
                  "name": "parentNode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "The node that the current node is parented to.\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Node"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            42,
            43,
            46,
            44,
            45
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            47,
            57,
            96,
            66,
            74,
            69,
            60,
            71,
            93,
            63,
            78,
            81,
            84,
            109,
            90,
            87,
            52,
            105,
            100
          ]
        }
      ]
    },
    {
      "id": 3,
      "name": "Feature",
      "kind": 256,
      "kindString": "Interface",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "Enables discovery of what features the runtime environment supports."
      },
      "children": [
        {
          "id": 6,
          "name": "htmlTemplateElement",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Does the runtime environment support native HTMLTemplateElement?"
          },
          "type": {
            "type": "instrinct",
            "name": "boolean"
          }
        },
        {
          "id": 7,
          "name": "mutationObserver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Does the runtime environment support native DOM mutation observers?"
          },
          "type": {
            "type": "instrinct",
            "name": "boolean"
          }
        },
        {
          "id": 5,
          "name": "scopedCSS",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Does the runtime environment support the css scoped attribute?"
          },
          "type": {
            "type": "instrinct",
            "name": "boolean"
          }
        },
        {
          "id": 4,
          "name": "shadowDOM",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Does the runtime environment support ShadowDOM?"
          },
          "type": {
            "type": "instrinct",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            6,
            7,
            5,
            4
          ]
        }
      ]
    },
    {
      "id": 8,
      "name": "Performance",
      "kind": 256,
      "kindString": "Interface",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The runtime's performance API."
      },
      "children": [
        {
          "id": 9,
          "name": "now",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 10,
              "name": "now",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "instrinct",
                "name": "number"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            9
          ]
        }
      ]
    },
    {
      "id": 11,
      "name": "Platform",
      "kind": 256,
      "kindString": "Interface",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "Represents the core APIs of the runtime environment."
      },
      "children": [
        {
          "id": 23,
          "name": "XMLHttpRequest",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The runtime's XMLHttpRequest API."
          },
          "type": {
            "type": "reference",
            "name": "XMLHttpRequest"
          }
        },
        {
          "id": 12,
          "name": "global",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The runtime environment's global."
          },
          "type": {
            "type": "instrinct",
            "name": "any"
          }
        },
        {
          "id": 15,
          "name": "history",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The runtime's history API."
          },
          "type": {
            "type": "reference",
            "name": "Object"
          }
        },
        {
          "id": 14,
          "name": "location",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The runtime's location API."
          },
          "type": {
            "type": "reference",
            "name": "Object"
          }
        },
        {
          "id": 13,
          "name": "noop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "A function wich does nothing."
          },
          "type": {
            "type": "reference",
            "name": "Function"
          }
        },
        {
          "id": 16,
          "name": "performance",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The runtime's performance API"
          },
          "type": {
            "type": "reference",
            "name": "Performance",
            "id": 8
          }
        },
        {
          "id": 31,
          "name": "addEventListener",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 32,
              "name": "addEventListener",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Add a global event listener."
              },
              "parameters": [
                {
                  "id": 33,
                  "name": "eventName",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string representing the event type to listen for."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                },
                {
                  "id": 34,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The function that receives a notification when an event of the specified type occurs."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Function"
                  }
                },
                {
                  "id": 35,
                  "name": "capture",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "If true, useCapture indicates that the user wishes to initiate capture.\n"
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 24,
          "name": "eachModule",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 25,
              "name": "eachModule",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Iterate all modules loaded by the script loader."
              },
              "parameters": [
                {
                  "id": 26,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A callback that will receive each module id along with the module object. Return true to end enumeration.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 27,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 28,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 29,
                              "name": "key",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "instrinct",
                                "name": "string"
                              }
                            },
                            {
                              "id": 30,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "name": "Object"
                              }
                            }
                          ],
                          "type": {
                            "type": "instrinct",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 36,
          "name": "removeEventListener",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 37,
              "name": "removeEventListener",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Remove a global event listener."
              },
              "parameters": [
                {
                  "id": 38,
                  "name": "eventName",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "A string representing the event type to listen for."
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "string"
                  }
                },
                {
                  "id": 39,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The function to remove from the event."
                  },
                  "type": {
                    "type": "reference",
                    "name": "Function"
                  }
                },
                {
                  "id": 40,
                  "name": "capture",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "text": "Specifies whether the listener to be removed was registered as a capturing listener or not.\n"
                  },
                  "type": {
                    "type": "instrinct",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 17,
          "name": "requestAnimationFrame",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 18,
              "name": "requestAnimationFrame",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Registers a function to call when the system is ready to update (repaint) the display."
              },
              "parameters": [
                {
                  "id": 19,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "The function to call.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 20,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 21,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 22,
                              "name": "animationFrameStart",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "instrinct",
                                "name": "number"
                              }
                            }
                          ],
                          "type": {
                            "type": "instrinct",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "instrinct",
                "name": "number"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            23,
            12,
            15,
            14,
            13,
            16
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            31,
            24,
            36,
            17
          ]
        }
      ]
    },
    {
      "id": 121,
      "name": "DOM",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The singleton instance of the Dom API."
      },
      "type": {
        "type": "reference",
        "name": "Dom",
        "id": 41,
        "moduleName": "\"aurelia-pal\""
      }
    },
    {
      "id": 119,
      "name": "FEATURE",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The singleton instance of the Feature discovery API."
      },
      "type": {
        "type": "reference",
        "name": "Feature",
        "id": 3,
        "moduleName": "\"aurelia-pal\""
      }
    },
    {
      "id": 120,
      "name": "PLATFORM",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The singleton instance of the Platform API."
      },
      "type": {
        "type": "reference",
        "name": "Platform",
        "id": 11,
        "moduleName": "\"aurelia-pal\""
      }
    },
    {
      "id": 114,
      "name": "AggregateError",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 115,
          "name": "AggregateError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates an instance of Error that aggregates and preserves an innerError.",
            "returns": "The Error instance.\n"
          },
          "parameters": [
            {
              "id": 116,
              "name": "message",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The error message."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            },
            {
              "id": 117,
              "name": "innerError",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "The inner error message to aggregate."
              },
              "type": {
                "type": "reference",
                "name": "Error"
              }
            },
            {
              "id": 118,
              "name": "skipIfAlreadyAggregate",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "Indicates to not wrap the inner error if it itself already has an innerError."
              },
              "type": {
                "type": "instrinct",
                "name": "boolean"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Error"
          }
        }
      ]
    },
    {
      "id": 122,
      "name": "initializePAL",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 123,
          "name": "initializePAL",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Enables initializing a specific implementation of the Platform Abstraction Layer (PAL)."
          },
          "parameters": [
            {
              "id": 124,
              "name": "callback",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "Allows providing a callback which configures the three PAL singletons with their platform-specific implementations.\n"
              },
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 125,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 126,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 127,
                          "name": "platform",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Platform",
                            "id": 11
                          }
                        },
                        {
                          "id": 128,
                          "name": "feature",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Feature",
                            "id": 3
                          }
                        },
                        {
                          "id": 129,
                          "name": "dom",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Dom",
                            "id": 41
                          }
                        }
                      ],
                      "type": {
                        "type": "instrinct",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [
        41,
        3,
        8,
        11
      ]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [
        121,
        119,
        120
      ]
    },
    {
      "title": "Functions",
      "kind": 64,
      "children": [
        114,
        122
      ]
    }
  ]
}